{
  "_args": [
    [
      {
        "raw": "react-mic@^7.0.2",
        "scope": null,
        "escapedName": "react-mic",
        "name": "react-mic",
        "rawSpec": "^7.0.2",
        "spec": ">=7.0.2 <8.0.0",
        "type": "range"
      },
      "C:\\Users\\Greye\\Desktop\\Proyecto\\linea-etica"
    ]
  ],
  "_from": "react-mic@>=7.0.2 <8.0.0",
  "_id": "react-mic@7.0.2",
  "_inCache": true,
  "_location": "/react-mic",
  "_nodeVersion": "6.2.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-mic-7.0.2.tgz_1497557331186_0.4959824946708977"
  },
  "_npmUser": {
    "name": "hackingbeauty",
    "email": "mark.muskardin@gmail.com"
  },
  "_npmVersion": "4.4.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-mic@^7.0.2",
    "scope": null,
    "escapedName": "react-mic",
    "name": "react-mic",
    "rawSpec": "^7.0.2",
    "spec": ">=7.0.2 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-mic/-/react-mic-7.0.2.tgz",
  "_shasum": "1365a3a96e00f137c31a36b319f48b414f4164b3",
  "_shrinkwrap": null,
  "_spec": "react-mic@^7.0.2",
  "_where": "C:\\Users\\Greye\\Desktop\\Proyecto\\linea-etica",
  "author": {
    "name": "Mark Muskardin"
  },
  "bugs": {
    "url": "https://github.com/hackingbeauty/react-mic/issues"
  },
  "dependencies": {
    "react-ga": "^2.2.0"
  },
  "description": "Record audio from your microphone and display as a sound oscillation",
  "devDependencies": {
    "gh-pages": "^1.0.0",
    "material-ui": "^0.16.7",
    "nwb": "^0.15.6",
    "nwb-sass": "^0.6.0",
    "react": "^15.4.1",
    "react-dom": "^15.4.1",
    "react-tap-event-plugin": "^2.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "1365a3a96e00f137c31a36b319f48b414f4164b3",
    "tarball": "https://registry.npmjs.org/react-mic/-/react-mic-7.0.2.tgz"
  },
  "files": [
    "css",
    "es",
    "lib",
    "umd"
  ],
  "gitHead": "f74d8acd77801b598fc2d3e7d2b117cb08f69e8f",
  "homepage": "https://hackingbeauty.github.io/react-mic",
  "jsnext:main": "es/index.js",
  "keywords": [
    "react",
    "react-component",
    "microphone",
    "MediaRecorder",
    "volume meter"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "hackingbeauty",
      "email": "mark.muskardin@gmail.com"
    }
  ],
  "module": "es/index.js",
  "name": "react-mic",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "15.x"
  },
  "readme": "# react-mic\n\nRecord a user's voice and display as an osscilation.\n\nFeatured in the course [\"How to Write a Single Page Application\"](http://www.singlepageapplication.com).\n\nWorks via the HTML5 MediaRecorder API ([currently only available in Chrome & Firefox](https://caniuse.com/#search=MediaRecorder)).\n\n## Demo\n\nCheck out the [demo](https://hackingbeauty.github.io/react-mic/).\n\nYou can also see this component in action at [voicerecordpro.com](https://www.voicerecordpro.com).\n\n## Installation\n\n`npm install --save react-mic`\n\n## Features\n\n- Record audio from microphone\n- Display sound wave as voice is being recorded\n- Save audio as BLOB\n\n## Usage\n\n```js\n\n<ReactMic\n  record={boolean}         // defaults -> false.  Set to true to begin recording\n  className={string}       // provide css class name\n  onStop={function}        // callback to execute when audio stops recording\n  strokeColor={string}     // sound wave color\n  backgroundColor={string} // background color\n/>\n\n```\n\n## Example\n\n```js\nimport { ReactMic } from 'react-mic';\n\nexport class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: false\n    }\n\n  }\n\n  startRecording = () => {\n    this.setState({\n      record: true\n    });\n  }\n\n  stopRecording = () => {\n    this.setState({\n      record: false\n    });\n  }\n\n  onStop(recordedBlob) {\n    console.log('recordedBlob is: ', recordedBlob);\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactMic\n          record={this.state.record}\n          className=\"sound-wave\"\n          onStop={this.onStop}\n          strokeColor=\"#000000\"\n          backgroundColor=\"#FF4081\" />\n        <button onTouchTap={this.startRecording} type=\"button\">Start</button>\n        <button onTouchTap={this.stopRecording} type=\"button\">Stop</button>\n      </div>\n    );\n  }\n}\n```\n# Having issues with the lambda function?\nTry installing babel-preset-stage-1\n\nInclude stage-1 in your webpack.config under presets.\n\ne.g.\n\n```js\nmodule.exports = {\n    entry: \"./scripts/Main.js\",\n    output: {\n        path: __dirname,\n        filename: \"./static/script.js\"\n    },\n    module: {\n        loaders: [{\n            test: /\\.css$/,\n            loader: \"style!css\"\n        }, {\n            test: /\\.js$/,\n            // exclude: /(node_modules)/,\n            loader: 'babel-loader',\n            query: {\n                presets: ['es2015', 'react', 'stage-1']\n            }\n        }]\n\n    }\n};\n```\n\n## License\n\nMIT\n\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hackingbeauty/react-mic.git"
  },
  "scripts": {
    "build": "nwb build-react-component",
    "clean": "nwb clean-module && npm clean-demo",
    "deploy": "nwb build-react-component && gh-pages -d demo/dist",
    "start": "nwb serve-react-demo",
    "test": "nwb test",
    "test:coverage": "nwb test --coverage",
    "test:watch": "nwb test --server"
  },
  "version": "7.0.2"
}
