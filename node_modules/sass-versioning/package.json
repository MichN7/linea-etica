{
  "_args": [
    [
      {
        "raw": "sass-versioning@^0.2.2",
        "scope": null,
        "escapedName": "sass-versioning",
        "name": "sass-versioning",
        "rawSpec": "^0.2.2",
        "spec": ">=0.2.2 <0.3.0",
        "type": "range"
      },
      "C:\\Users\\Greye\\Desktop\\Proyecto\\linea-etica\\node_modules\\@gov.au\\core"
    ]
  ],
  "_from": "sass-versioning@>=0.2.2 <0.3.0",
  "_id": "sass-versioning@0.2.2",
  "_inCache": true,
  "_location": "/sass-versioning",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/sass-versioning-0.2.2.tgz_1486503886133_0.3667368208989501"
  },
  "_npmUser": {
    "name": "dominikwilkowski",
    "email": "hi@dominik-wilkowski.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sass-versioning@^0.2.2",
    "scope": null,
    "escapedName": "sass-versioning",
    "name": "sass-versioning",
    "rawSpec": "^0.2.2",
    "spec": ">=0.2.2 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@gov.au/core"
  ],
  "_resolved": "https://registry.npmjs.org/sass-versioning/-/sass-versioning-0.2.2.tgz",
  "_shasum": "6af27dd261b90f4fa426fa9eb8215ef8289c1377",
  "_shrinkwrap": null,
  "_spec": "sass-versioning@^0.2.2",
  "_where": "C:\\Users\\Greye\\Desktop\\Proyecto\\linea-etica\\node_modules\\@gov.au\\core",
  "author": {
    "name": "Dominik Wilkowski",
    "email": "Hi@Dominik-Wilkowski.com",
    "url": "http://dominik-wilkowski.com/"
  },
  "bugs": {
    "url": "https://github.com/dominikwilkowski/sass-versioning/issues"
  },
  "dependencies": {},
  "description": "Version your Sass modules and test them at compile time",
  "devDependencies": {
    "cfonts": "^1.0.2",
    "chalk": "^1.1.3",
    "glob": "^7.1.1",
    "node-sass": "^3.13.0",
    "sassdoc": "^2.1.20",
    "watch": "^1.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "6af27dd261b90f4fa426fa9eb8215ef8289c1377",
    "tarball": "https://registry.npmjs.org/sass-versioning/-/sass-versioning-0.2.2.tgz"
  },
  "eyeglass": {
    "name": "sass-versioning",
    "exports": false
  },
  "files": [
    "dist/_index.scss"
  ],
  "gitHead": "a11a11820fbaf58c4c863405bcd2983215b77acc",
  "homepage": "https://github.com/dominikwilkowski/sass-versioning",
  "ignore": [
    "test",
    "sassdoc",
    "**/.*",
    "assets"
  ],
  "keywords": [
    "scss",
    "sass",
    "eyeglass-module",
    "versioning",
    "semver"
  ],
  "license": "GPL-3.0",
  "licenses": [
    {
      "type": "GPL-3.0",
      "url": "https://raw.githubusercontent.com/dominikwilkowski/sass-versioning/master/LICENSE"
    }
  ],
  "main": "./dist/_index.scss",
  "maintainers": [
    {
      "name": "dominikwilkowski",
      "email": "hi@dominik-wilkowski.com"
    }
  ],
  "name": "sass-versioning",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/dominikwilkowski/sass-versioning.svg?branch=master)](https://travis-ci.org/dominikwilkowski/sass-versioning)\n\nSass-versioning\n===============\n\n[![NPM](https://nodei.co/npm/sass-versioning.png?downloads=false)](https://nodei.co/npm/sass-versioning/)\n\n> Version your sass modules and test them at compile time. Inspired by Salesforces [Sass deprecate](https://github.com/salesforce-ux/sass-deprecate) this\n> package enables you to combine individually versioned sass partials with interdependencies and check for conflicts before you generate the CSS.\n\n![Sass error examples](https://raw.githubusercontent.com/dominikwilkowski/sass-versioning/master/assets/errors.jpg)\n\n## <div align=\"center\">[Read the Sass-versioning API documentation](https://dominikwilkowski.github.io/sass-versioning/sassdoc/)</div>\n\n## Content\n\n* [Usage](#usage)\n* [Build](#build)\n* [Test](#test)\n* [Release History](#release-history-remote)\n* [License](#license)\n\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n## Usage\n\nSass-versioning replies on [semantically versioned](http://semver.org/) modules. According to `semver` a major version will break backwards compatibility while\nminor and patch versions keep backwards compatibility intact so this script will throw errors only on major version mismatches and when a module can't be found.\n\n### Example\n\nIf you have multiple versioned Sass modules and need to defined dependencies amongst them, this is for you.\n\nImagine you have a couple modules:\n\n**core `v1.0.0`**\n```scss\n@mixin mixins {\n\t//some awesome css in a mixin we called \"mixins\" because #namingishard\n}\n```\n\n**core `v2.0.0`**\n```scss\n@mixin core {\n\t//some awesome css in a mixin we renamed to \"core\"\n}\n```\n\n**grid `v1.1.0`**\n```scss\n@import \"core\";\n\n@include mixins(); //we clearly need version 1.0.0 of the core module with the old named mixin\n                   //this will fail if you only @import core v2.0.0\n```\n\n**accordion `v2.0.0`**\n```scss\n\n@include core(); //this module has been updated to digest the new version of core 2.0.0\n                 //this will fail if you only @import core v1.0.0\n```\n\nEach of these come with interdependencies and we need to check for conflicts. Like if grid was dependent on core `v1.0.0` but only `v2.0.0` was imported or on\nan entirely different module that we don’t even have in our imports. To see more examples check out the `./test/` folder.\n\nTo make sure this works, we need to **register each module** and at the bottom of all imports **check for conflicts** and throw errors on conflicts.\n\n### Register\n\nTo register a module you need three parameter and call the `versioning-add` mixin. You do that in each module that can possibly be dependent upon.\n\n```scss\n$name: \"accordion\";   //the name of this module\n$version: \"1.0.0\";    //the version of this module\n                      //all dependencies of that module\n                      //this module depends on a module named \"core\" at version \"2.0.0\"\n                      //this module depends on a module named \"grid\" at version \"1.0.0\"\n$dependencies: (\n\t(\"core\", \"2.0.0\"),\n\t(\"grid\", \"1.0.0\"),\n);\n\n@include versioning-add( $name, $version, $dependencies ); //call the mixin to register your module\n\n//add some awesome Sass here\n```\n\nIf your module has no dependencies you can simply leave the `$dependencies` empty. That would look like this:\n\n```scss\n$name: \"core\";\n$version: \"2.0.0\";\n$dependencies: ();  //no dependencies\n\n@include versioning-add( $name, $version, $dependencies );\n\n//add some awesome Sass here\n```\n\n### Check for conflicts\n\nWhen you include all those modules you now need to check for conflicts with the `versioning-check()` mixin. Make sure you call this at the bottom after all\nincludes.\n\n```scss\n@import \"module1\";\n@import \"module2\";\n@import \"module3\";\n\n@include versioning-check();\n```\n\nThis mixin will throw a descriptive `@error` if it finds a conflicts.\n\n```shell\n$ sass test2.scss test.css\nError: The module \"grid\" requires \"core\" v2.0.1. But \"core\" v2.0.0 included.\n        on line 510 of ../dist/index.scss, in \"versioning-check\"\n        from line 63 of test2.scss\n\n$ sass test3.scss test.css\nError: The module \"grid\" requires \"core\" v1.0.0. But \"core\" v2.0.0 included.\n        on line 510 of ../dist/index.scss, in \"versioning-check\"\n        from line 63 of test3.scss\n\n$ sass test4.scss test.css\nError: The module \"grid\" requires \"core\" v2.1.0. But \"core\" v2.0.0 included.\n        on line 510 of ../dist/index.scss, in \"versioning-check\"\n        from line 63 of test4.scss\n\n$ sass test5.scss test.css\nError: The module \"grid\" requires \"core\" v3.0.0. But \"core\" v2.0.0 included.\n        on line 510 of ../dist/index.scss, in \"versioning-check\"\n        from line 63 of test5.scss\n\n$ sass test6.scss test.css\nError: The module \"grid\" requires \"buttons\" v1.0.0. But the dependency is missing entirely\n        on line 516 of ../dist/index.scss, in \"versioning-check\"\n        from line 63 of test6.scss\n```\n\n\n**[⬆ back to top](#content)**\n\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n## Build\n\nWe got three npm scripts you can run:\n\n- `concat`\n- `generate-doc`\n- `test`\n- `watch`\n\n**`concat`**\n\nDeletes the `./dist/` folder, creates it again (to make sure we always have the latest in the folder)\nand concatenates all files from `./src/` into `./dist/index.scss`.\n\n**`generate-doc`**\n\nUsing [Sassdoc](http://sassdoc.com/) this task generates the documentation for our Sass into the `./sassdoc/` folder.\n\n**`test`**\n\nWill run the [test described below](#test).\n\n**`watch`**\n\nOur watch checks for changes inside the `./src/` folder and runs the `concat`, `generate-doc` and `test` tasks.\n\n\n**[⬆ back to top](#content)**\n\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n## Test\n\nTo test run `npm test` in the project folder. The test script will run over each `*.scss` file inside the `./test/` folder. Each of those files has a comment\nat the very first line of the file that looks like this:\n\n```scss\n// expected: [expected error message]\n\n.some-css {} //etc\n```\n\nThe test script will compare the error message found here `[expected error message]` against what [node-sass](https://github.com/sass/node-sass) outputs.\n\n\n**[⬆ back to top](#content)**\n\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n## Release History remote\n\n* v0.2.2 - Renamed to sass partial naming convention\n* v0.2.1 - Fixed package.json files array\n* v0.2.0 - Added eyeglass support, moved to @HugoGiraudel excellent sass-semver, added more docs\n* v0.1.2 - Tweaked code credit\n* v0.1.1 - Added to documentation\n* v0.1.0 - Initial starting point\n\n**[⬆ back to top](#content)**\n\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n## License\n\nCopyright (c) Dominik Wilkowski. Licensed under the [GPL-3.0](https://raw.githubusercontent.com/dominikwilkowski/sass-versioning/master/LICENSE).\n\n**[⬆ back to top](#content)**\n\n# };",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominikwilkowski/sass-versioning.git"
  },
  "scripts": {
    "concat": "rm -rf ./dist/ && mkdir ./dist/ && cat ./src/* > dist/_index.scss",
    "generate-doc": "sassdoc ./dist/_index.scss sassdoc --config=.sassdocrc && cfonts ' Documentation successfully generated' -f console -c candy",
    "test": "node ./test/test.js",
    "watch": "watch 'npm run concat && npm run generate-doc && npm run test' ./src/"
  },
  "version": "0.2.2"
}
